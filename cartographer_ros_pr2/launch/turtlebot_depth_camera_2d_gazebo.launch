<!--
  Copyright 2016 The Cartographer Authors

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<launch>

  <arg name="localization_mode"  default="false"/>

  <!--<arg name="world_file"  default="worlds/willowgarage.world"/>-->
  <arg name="world_file"  default="$(env TURTLEBOT_GAZEBO_WORLD_FILE)"/>

  <arg name="base"      value="$(optenv TURTLEBOT_BASE kobuki)"/> <!-- create, roomba -->
  <arg name="battery"   value="$(optenv TURTLEBOT_BATTERY /proc/acpi/battery/BAT0)"/>  <!-- /proc/acpi/battery/BAT0 -->
  <arg name="gui" default="true"/>
  <arg name="stacks"    value="$(optenv TURTLEBOT_STACKS hexagons)"/>  <!-- circles, hexagons -->
  <arg name="3d_sensor" value="$(optenv TURTLEBOT_3D_SENSOR kinect)"/>  <!-- kinect, asus_xtion_pro -->

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="use_sim_time" value="true"/>
    <arg name="debug" value="false"/>
    <arg name="gui" value="$(arg gui)" />
    <arg name="world_name" value="$(arg world_file)"/>
  </include>

  <include file="$(find turtlebot_gazebo)/launch/includes/$(arg base).launch.xml">
    <arg name="base" value="$(arg base)"/>
    <arg name="stacks" value="$(arg stacks)"/>
    <arg name="3d_sensor" value="$(arg 3d_sensor)"/>
  </include>

  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="30.0" />
  </node>

  <!-- Fake 2D laserscan from kinect -->
  <node pkg="nodelet" type="nodelet" name="laserscan_nodelet_manager" args="manager"/>
  <node pkg="nodelet" type="nodelet" name="depthimage_to_laserscan"
        args="load depthimage_to_laserscan/DepthImageToLaserScanNodelet laserscan_nodelet_manager">
    <param name="scan_height" value="10"/>
    <param name="output_frame_id" value="camera_depth_frame"/>
    <param name="range_min" value="0.45"/>
    <remap from="image" to="/camera/depth/image_raw"/>
    <remap from="scan" to="/scan"/>
  </node>

  <!-- Cartographer localization mode -->
  <group if="$(arg localization_mode)">
    <node name="cartographer_node" pkg="cartographer_ros"
          type="cartographer_node"
          args="-configuration_directory $(find cartographer_ros_pr2)/configuration_files
                -configuration_basename turtlebot_depth_camera_2d_gazebo.lua
                -load_state_filename $(arg load_state_filename)"
          output="screen">
      <remap from="points2" to="/camera/depth/points" />
    </node>

    <node name="set_initpose" pkg="cartographer_ros" type="set_initpose_from_rviz" output="screen"
          args="-configuration_directory $(find cartographer_ros_pr2)/configuration_files
                -configuration_basename turtlebot_depth_camera_2d_gazebo.lua
                -load_state_filename $(arg load_state_filename)" >
    </node>
  </group>
  <!-- Cartographer slam mode -->
  <group unless="$(arg localization_mode)">
    <node name="cartographer_node" pkg="cartographer_ros"
          type="cartographer_node"
          args="-configuration_directory $(find cartographer_ros_pr2)/configuration_files
                -configuration_basename turtlebot_depth_camera_2d_gazebo.lua"
          output="screen">
      <remap from="points2" to="/camera/depth/points" />
    </node>
  </group>


  <node name="flat_world_imu_node" pkg="cartographer_turtlebot"
      type="cartographer_flat_world_imu_node" output="screen">
    <remap from="imu_in" to="/mobile_base/sensors/imu_data" />
    <remap from="imu_out" to="/imu" />
  </node>

  <node name="cartographer_occupancy_grid_node" pkg="cartographer_ros"
      type="cartographer_occupancy_grid_node" args="-resolution 0.05" />

  <node name="rviz" pkg="rviz" type="rviz" required="true"
      args="-d $(find cartographer_ros)/configuration_files/demo_2d.rviz" />

  <!-- Move base for navigation -->
  <include file="$(find turtlebot_navigation)/launch/includes/move_base.launch.xml" />

</launch>
