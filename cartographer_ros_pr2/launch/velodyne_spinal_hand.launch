<launch>
  <arg name="headless" default="false" />

  <!-- robot (sensor unit) kinematics model -->
  <param name="robot_description"
         command="$(find xacro)/xacro.py '$(find cartographer_ros_pr2)/urdf/velodyne_hdl32e_spinal.urdf.xacro'" />
  <node name="robot_state_publisher" pkg="robot_state_publisher"
    type="robot_state_publisher" />

  <!-- sensors -->
  <!-- spinal imu -->
  <include file="$(find spinal_ros_bridge)/launch/serial.launch">
    <arg name="baud" value="921600" />
  </include>
  <node name="spinal_imu_converter" pkg="cartographer_ros_pr2" type="spinal_imu_converter.py" />

  <!-- velodyne HDL-32e -->
  <include file="$(find velodyne_pointcloud)/launch/32e_points.launch">
    <arg name="calibration" value="$(find cartographer_ros_pr2)/configuration_files/velodyne-32e-db.yaml" />
    <arg name="rpm" value="600" />
  </include>

  <!-- cartographer -->
  <node name="cartographer_node" pkg="cartographer_ros"
      type="cartographer_node" args="
          -configuration_directory $(find cartographer_ros_pr2)/configuration_files
          -configuration_basename velodyne_spinal.lua"
      output="screen">
    <remap from="points2" to="/velodyne_points" />
    <remap from="imu" to="/ros_imu"/>
  </node>

  <group unless="$(arg headless)" >
    <node name="cartographer_occupancy_grid_node" pkg="cartographer_ros"
          type="cartographer_occupancy_grid_node" args="-resolution 0.05" />


    <node name="rviz" pkg="rviz" type="rviz" required="true"
          args="-d $(find cartographer_ros)/configuration_files/demo_3d.rviz" />
  </group>
</launch>
