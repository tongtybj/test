<!--
  Copyright 2016 The Cartographer Authors

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<launch>

  <arg name="localization_mode"  default="false"/>
  <arg name="headless"  default="true"/>

  <include file="$(find turtlebot_bringup)/launch/minimal.launch" />

  <include file="$(find turtlebot_bringup)/launch/3dsensor.launch">
    <arg name="3d_sensor" default="kinect" />
    </include>

  <!-- Cartographer: override the parameter here to remove the leading slash which should
       not be there according to tf2 naming rules. -->
  <param name="/depthimage_to_laserscan/output_frame_id" value="camera_depth_frame" />
  <!-- override robot model -->
  <param name="robot_description" command="$(find xacro)/xacro.py '$(find cartographer_ros_pr2)/urdf/velodyne_hdl32e_spinal_turtlebot.urdf.xacro'" />

  <!-- disable the odom published by turtlebot -->
  <param name="/mobile_base/publish_tf" value="false" />

  <!-- sensors -->
  <!-- spinal imu -->
  <include file="$(find spinal_ros_bridge)/launch/serial.launch">
    <arg name="baud" value="921600" />
    <arg name="port" value="/dev/spinal" />
  </include>
  <node name="spinal_imu_converter" pkg="cartographer_ros_pr2" type="spinal_imu_converter.py" />
  <!-- velodyne HDL-32e -->
  <include file="$(find velodyne_pointcloud)/launch/32e_points.launch">
    <arg name="calibration" value="$(find cartographer_ros_pr2)/configuration_files/velodyne-32e-db.yaml" />
    <arg name="rpm" value="600" />
  </include>

  <!-- Cartographer localization mode -->
  <group if="$(arg localization_mode)">
    <node name="cartographer_node" pkg="cartographer_ros"
          type="cartographer_node"
          args="-configuration_directory $(find cartographer_ros_pr2)/configuration_files
                -configuration_basename velodyne_spinal_turtlebot.lua
                -load_state_filename $(arg load_state_filename)"
          output="screen">
      <remap from="points2" to="/velodyne_points" />
      <remap from="imu" to="/ros_imu"/>
    </node>

    <node name="set_initpose" pkg="cartographer_ros" type="set_initpose_from_rviz" output="screen"
          args="-configuration_directory $(find cartographer_ros_pr2)/configuration_files
                -configuration_basename velodyne_spinal_turtlebot.lua
                -load_state_filename $(arg load_state_filename)" >
    </node>
  </group>
  <!-- Cartographer slam mode -->
  <group unless="$(arg localization_mode)">
    <node name="cartographer_node" pkg="cartographer_ros"
          type="cartographer_node"
          args="-configuration_directory $(find cartographer_ros_pr2)/configuration_files
                -configuration_basename velodyne_spinal_turtlebot.lua"
          output="screen">
      <remap from="points2" to="/velodyne_points" />
      <remap from="imu" to="/ros_imu"/>
    </node>
  </group>

  <node name="cartographer_occupancy_grid_node" pkg="cartographer_ros"
      type="cartographer_occupancy_grid_node" args="-resolution 0.05" />

  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find cartographer_ros_pr2)/configuration_files/turtlebot_velodyne.rviz" unless="$(arg headless)"/>

  <!-- Move base for navigation -->
  <include file="$(find turtlebot_navigation)/launch/includes/move_base.launch.xml">
    <arg name="odom_topic" value="movebase_odom" /> <!-- maybe we have to omit the raw odometery from turtlebot -->
  </include>


</launch>
